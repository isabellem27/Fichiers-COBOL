      ****************************************************************** 
      * EXOSQL01: Déclarations sql pour récupérer les informations     *
      *           suivantes: L’âge maximum, L’âge minimum,             *
      *           Le nombre d’individus par âge                        *
      *           le nom, prénom, email et citation pour les individus *
      *           de Belgique                                          *
      *           Affichage à l'écran des résultats                    *   
      *                                                                *
      * Date de création : le 10/05/2024                               * 
      ******************************************************************

       IDENTIFICATION DIVISION.
       PROGRAM-ID. exosql01.
       AUTHOR. Isabelle Marand.
       
       ENVIRONMENT DIVISION.
       INPUT-OUTPUT SECTION.
       FILE-CONTROL.
           SELECT F-OUTPUT
               ASSIGN TO 'output.dat'
               ACCESS MODE IS SEQUENTIAL
               ORGANIZATION IS LINE SEQUENTIAL
               FILE STATUS IS F-OUTPUT-STATUS. 

       DATA DIVISION.
       FILE SECTION.
       FD  F-OUTPUT
           RECORD CONTAINS 250 CHARACTERS
           RECORDING MODE IS F.

       01  REC-F-OUTPUT        PIC X(250).

       WORKING-STORAGE SECTION.
       01  F-OUTPUT-STATUS      PIC X(02)   VALUE SPACE .
           88 F-OUTPUT-STATUS-OK    VALUE '00'.        
           88 F-OUTPUT-STATUS-EOF   VALUE '10'.

      * Variables internes 
       01  WS-SQL-LIB     PIC X(80)   VALUE SPACES   .
       01  FIN            PIC S9(9)   VALUE 100      . 
       01  WS-POURCENT    PIC 99V99   VALUE 0        .            

      * variables pour le dialogue console
       01  WS-LIG-MIN     PIC X(24)   VALUE 'LE PLUS JEUNE AGE EST: '  .  
       01  WS-LIG-MAX     PIC X(24)   VALUE 'LE PLUS GRAND AGE EST: '  .
       01  WS-LIG-CPTAGE  PIC X(35)   VALUE 'INDIVIDUS PAR AGE'        .
       01  WS-LIG-CPTAGE-ENT.
           05 WS-LIG-AGE        PIC X(6)    VALUE 'AGE'          .
           05 FILLER            PIC X       VALUE SPACE          .
           05 WS-LIG-NBAGE      PIC X(50)   VALUE 'NB INDIVIDUS' .
       01  WS-LIG-AN            PIC X(5)    VALUE ' ans '  . 
       01  WS-LIG-NBAGEZ        PIC Z(4)9                  .  
       01  WS-LIG-NBLIGZ        PIC ZZ9                    .            
       01  WS-LIG-NBLIG         PIC X(30)   VALUE
           'NB de lignes mises à jour:'                    . 
       01  WS-LIG-BEFR          PIC X(50)   VALUE
           'Bascule des Belges vers France:'               .       
       01  WS-LIG-UCASE         PIC X(25)   VALUE
           'Mise en majuscules:'                           .
       01  WS-LIG-CORR          PIC X(50)   VALUE
           'Correction des codes pays:'                    .

       01  WS-LIG-BELGE   PIC X(45)   VALUE
           'LISTE DES INDIVIDUS RATTACHES A LA BELGIQUE'   . 
       01  WS-LIG-BELGE-ENT1.
           05 WS-LIG-ID         PIC X(40)   VALUE 'ID'     .
           05 FILLER            PIC X       VALUE SPACE    .
           05 WS-LIG-LASTNAME   PIC X(50)   VALUE 'NOM'    .
           05 FILLER            PIC X       VALUE SPACE    .
           05 WS-LIG-FIRSTNAME  PIC X(50)   VALUE 'PRENOM' .
           05 FILLER            PIC X       VALUE SPACE    . 
       01  WS-LIG-BELGE-ENT2.
           05 WS-LIG-EMAIL      PIC X(50)   VALUE 'EMAIL'  .
           05 FILLER            PIC X       VALUE SPACE    .       
           05 WS-LIG-PHRASE     PIC X(50)   VALUE 'PHRASE NATIONALE'.
       01  WS-LIG-BLC           PIC X(10)   VALUE SPACES   .  
       
       01  WS-LIG-TITRE         PIC X(50)   VALUE 
           'ETUDE DE LA POPULATION'                           .
       01  WS-LIG-AGE-ENT.
           05 WS-LIG-ENT-MIN    PIC X(7)    VALUE 'AGE MIN'   .
           05 FILLER            PIC X       VALUE SPACE       .
           05 WS-LIG-ENT-MAX    PIC X(7)    VALUE 'AGE MAX'   .
           05 FILLER            PIC X       VALUE SPACE       .
           05 WS-LIG-ENT-MED    PIC X(10)   VALUE 'AGE MEDIAN'.

       01  WS-LIG-GENDER-ENT.
           05 WS-LIG-COUNTRY    PIC X(20)  VALUE 'COUNTRY'    .
           05 FILLER            PIC X      VALUE SPACE        .
           05 WS-LIG-GENDER     PIC X(15)  VALUE 'GENDER'     .
           05 FILLER            PIC X      VALUE SPACE        .
           05 WS-LIG-POURCENT   PIC X(20)  VALUE '% GENDER IN COUNTRY'. 

       01  WS-LIG-GENDER-DET.
           05 WS-LIGD-COUNTRY   PIC X(20)                .
           05 FILLER            PIC X      VALUE SPACE   .
           05 WS-LIGD-GENDER    PIC X(15)                .
           05 FILLER            PIC X      VALUE SPACE   .
           05 WS-LIGD-POURCENT  PIC 99.99                . 

       01  WS-LIG-FIN           PIC X(50)  VALUE 
           'FIN DU RAPPORT'                              .

      * Déclaration des variables correspondant à sql 
OCESQL*EXEC SQL BEGIN DECLARE SECTION END-EXEC             .
      * paramètres pour connexion à la base 
       01  DBNAME     PIC X(30)    VALUE 'dgse'            .
       01  USERNAME   PIC X(30)    VALUE 'cobol'           .
       01  PASSWD     PIC X(10)    VALUE  SPACE            .
      * 01  PASSWD     PIC X(10)    VALUE 'cbl85'           .

      * description des enregistrements attendus pour chaque curseur
       01  SQL-CPTAGE.
              05 SQL-CPT-ID        PIC 9(5)   .
              05 SQL-AGE           PIC 99     .

       01  SQL-BELGE.
              05 SQL-BE-ID         PIC X(40)  .
              05 SQL-BE-LASTNAME   PIC X(50)  .
              05 SQL-BE-FIRSTNAME  PIC X(50)  .        
              05 SQL-BE-EMAIL      PIC X(50)  .       
              05 SQL-BE-PHRASE     PIC X(50)  .  

       01  SQL-CURSEUR-COUNTRY.
              05 SQL-COUNTRY       PIC X(50)  .    
              05 SQL-GENDER        PIC X(50)  .
              05 SQL-NBPEOPLE      PIC 9(4)   .
              05 SQL-NBBYGENDER    PIC 9(4)   .

      * variables de travail
       01  SQL-AGE-MIN         PIC 99     VALUE 0.
       01  SQL-AGE-MAX         PIC 99     VALUE 0.
       01  SQL-AGE-MEDIAN      PIC 99     VALUE 0.
       01  SQL-NB-LIG          PIC 9(3)   VALUE 0. 

OCESQL*EXEC SQL END DECLARE SECTION END-EXEC. 
OCESQL*EXEC SQL INCLUDE SQLCA END-EXEC.
OCESQL     copy "sqlca.cbl".

OCESQL*
OCESQL 01  SQ0001.
OCESQL     02  FILLER PIC X(014) VALUE "DISCONNECT ALL".
OCESQL     02  FILLER PIC X(1) VALUE X"00".
OCESQL*
OCESQL 01  SQ0002.
OCESQL     02  FILLER PIC X(029) VALUE "SELECT MIN(AGE) FROM DATABANK".
OCESQL     02  FILLER PIC X(1) VALUE X"00".
OCESQL*
OCESQL 01  SQ0003.
OCESQL     02  FILLER PIC X(029) VALUE "SELECT MAX(AGE) FROM DATABANK".
OCESQL     02  FILLER PIC X(1) VALUE X"00".
OCESQL*
OCESQL 01  SQ0004.
OCESQL     02  FILLER PIC X(078) VALUE "SELECT AGE, COUNT( * ) AS NBAG"
OCESQL  &  "E FROM DATABANK GROUP BY AGE ORDER BY NBAGE DESC".
OCESQL     02  FILLER PIC X(1) VALUE X"00".
OCESQL*
OCESQL 01  SQ0005.
OCESQL     02  FILLER PIC X(187) VALUE "SELECT d.ID, d.LAST_NAME, d.FI"
OCESQL  &  "RST_NAME, d.EMAIL, p.PHRASE FROM DATABANK d INNER JOIN PHR"
OCESQL  &  "ASE p ON d.COUNTRY_CODE = p.COUNTRY_CODE WHERE d.COUNTRY_C"
OCESQL  &  "ODE = 'BE' ORDER BY LAST_NAME, FIRST_NAME".
OCESQL     02  FILLER PIC X(1) VALUE X"00".
OCESQL*
OCESQL 01  SQ0006.
OCESQL     02  FILLER PIC X(083) VALUE "SELECT COUNT( * ) FROM DATABAN"
OCESQL  &  "K WHERE COUNTRY_CODE = 'BE' AND AGE BETWEEN 36 AND 39".
OCESQL     02  FILLER PIC X(1) VALUE X"00".
OCESQL*
OCESQL 01  SQ0007.
OCESQL     02  FILLER PIC X(091) VALUE "UPDATE DATABANK SET COUNTRY_CO"
OCESQL  &  "DE = 'FR' WHERE COUNTRY_CODE = 'BE' AND AGE BETWEEN 36 AND"
OCESQL  &  " 39".
OCESQL     02  FILLER PIC X(1) VALUE X"00".
OCESQL*
OCESQL 01  SQ0008.
OCESQL     02  FILLER PIC X(211) VALUE "SELECT COUNT( * ) FROM DATABAN"
OCESQL  &  "K WHERE COUNTRY_CODE || COUNTRY != 'BEBelgium' AND COUNTRY"
OCESQL  &  "_CODE || COUNTRY != 'FRFrance' AND COUNTRY_CODE || COUNTRY"
OCESQL  &  " != 'CHSwitzerland' AND COUNTRY_CODE || COUNTRY != 'LULuxe"
OCESQL  &  "mbourg'".
OCESQL     02  FILLER PIC X(1) VALUE X"00".
OCESQL*
OCESQL 01  SQ0009.
OCESQL     02  FILLER PIC X(219) VALUE "UPDATE DATABANK SET COUNTRY_CO"
OCESQL  &  "DE = 'BE' WHERE COUNTRY_CODE || COUNTRY != 'BEBelgium' AND"
OCESQL  &  " COUNTRY_CODE || COUNTRY != 'FRFrance' AND COUNTRY_CODE ||"
OCESQL  &  " COUNTRY != 'CHSwitzerland' AND COUNTRY_CODE || COUNTRY !="
OCESQL  &  " 'LULuxembourg'".
OCESQL     02  FILLER PIC X(1) VALUE X"00".
OCESQL*
OCESQL 01  SQ0010.
OCESQL     02  FILLER PIC X(031) VALUE "SELECT COUNT( * ) FROM DATABAN"
OCESQL  &  "K".
OCESQL     02  FILLER PIC X(1) VALUE X"00".
OCESQL*
OCESQL 01  SQ0011.
OCESQL     02  FILLER PIC X(042) VALUE "UPDATE DATABANK SET SPOKEN = U"
OCESQL  &  "PPER(SPOKEN)".
OCESQL     02  FILLER PIC X(1) VALUE X"00".
OCESQL*
OCESQL 01  SQ0012.
OCESQL     02  FILLER PIC X(044) VALUE "UPDATE DATABANK SET COUNTRY = "
OCESQL  &  "UPPER(COUNTRY)".
OCESQL     02  FILLER PIC X(1) VALUE X"00".
OCESQL*
OCESQL 01  SQ0013.
OCESQL     02  FILLER PIC X(256) VALUE "SELECT d1.COUNTRY, d1.GENDER, "
OCESQL  &  "d.NBPEOPLE, COUNT( * ) AS NBBYGENDER FROM DATABANK d1 JOIN"
OCESQL  &  " ( SELECT COUNTRY, COUNT( * ) as NBPEOPLE FROM DATABANK WH"
OCESQL  &  "ERE GENDER IS NOT NULL GROUP BY COUNTRY ) AS d ON d.COUNTR"
OCESQL  &  "Y = d1.COUNTRY WHERE d1.GENDER IS NOT NULL GROUP BY ".
OCESQL     02  FILLER PIC X(064) VALUE "d1.COUNTRY, d1.GENDER, d.NBPEO"
OCESQL  &  "PLE ORDER BY d1.COUNTRY, d1.GENDER".
OCESQL     02  FILLER PIC X(1) VALUE X"00".
OCESQL*
OCESQL 01  SQ0014.
OCESQL     02  FILLER PIC X(098) VALUE "SELECT MIN(AGE), MAX(AGE), PER"
OCESQL  &  "CENTILE_CONT(0.5) WITHIN GROUP(ORDER BY AGE) AS MEDIAN FRO"
OCESQL  &  "M DATABANK".
OCESQL     02  FILLER PIC X(1) VALUE X"00".
OCESQL*
       PROCEDURE DIVISION.
      *0000-Main-start
           
OCESQL*    EXEC SQL 
OCESQL*       CONNECT :USERNAME IDENTIFIED BY :PASSWD USING :DBNAME 
OCESQL*    END-EXEC.
OCESQL     CALL "OCESQLConnect" USING
OCESQL          BY REFERENCE SQLCA
OCESQL          BY REFERENCE USERNAME
OCESQL          BY VALUE 30
OCESQL          BY REFERENCE PASSWD
OCESQL          BY VALUE 10
OCESQL          BY REFERENCE DBNAME
OCESQL          BY VALUE 30
OCESQL     END-CALL.
           IF  SQLCODE NOT = ZERO 
               MOVE 'CONNECTION BASE' TO WS-SQL-LIB
               PERFORM 9050-ERROR-RTN-START
                   THRU 9050-ERROR-RTN-END
           END-IF.

      *    Je m'occupe des informations portant sur l'âge
           PERFORM 1010-PARTIE1-START THRU 1010-PARTIE1-END.

      *    Je m'occupe des renseignements sur les belges
           PERFORM 1020-PARTIE2-START THRU 1020-PARTIE2-END.

      *    Je met à jour des données
           PERFORM 1030-PARTIE3-START THRU 1030-PARTIE3-END.

      *    J'écrit mon rapport
           PERFORM 1040-PARTIE4-START THRU 1040-PARTIE4-END.     

      *0000-main-end
OCESQL*    EXEC SQL DISCONNECT ALL END-EXEC.
OCESQL     CALL "OCESQLDisconnect" USING
OCESQL          BY REFERENCE SQLCA
OCESQL     END-CALL.
           IF  SQLCODE NOT = ZERO 
              MOVE 'DISCONNECTION BASE' TO WS-SQL-LIB 
              PERFORM 9050-ERROR-RTN-START
                   THRU 9050-ERROR-RTN-END
           END-IF.
           STOP RUN.


       1010-PARTIE1-START.
OCESQL*    EXEC SQL 
OCESQL*       SELECT MIN(AGE) INTO :SQL-AGE-MIN FROM DATABANK
OCESQL*    END-EXEC. 
OCESQL     CALL "OCESQLStartSQL"
OCESQL     END-CALL
OCESQL     CALL "OCESQLSetResultParams" USING
OCESQL          BY VALUE 1
OCESQL          BY VALUE 2
OCESQL          BY VALUE 0
OCESQL          BY REFERENCE SQL-AGE-MIN
OCESQL     END-CALL
OCESQL     CALL "OCESQLExecSelectIntoOne" USING
OCESQL          BY REFERENCE SQLCA
OCESQL          BY REFERENCE SQ0002
OCESQL          BY VALUE 0
OCESQL          BY VALUE 1
OCESQL     END-CALL
OCESQL     CALL "OCESQLEndSQL"
OCESQL     END-CALL.
           IF  SQLCODE NOT = ZERO 
               MOVE 'AGE MIN' TO WS-SQL-LIB
               PERFORM 9050-ERROR-RTN-START
                   THRU 9050-ERROR-RTN-END
           END-IF.
           DISPLAY WS-LIG-MIN SPACE SQL-AGE-MIN .

OCESQL*    EXEC SQL 
OCESQL*       SELECT MAX(AGE) INTO :SQL-AGE-MAX FROM DATABANK
OCESQL*    END-EXEC. 
OCESQL     CALL "OCESQLStartSQL"
OCESQL     END-CALL
OCESQL     CALL "OCESQLSetResultParams" USING
OCESQL          BY VALUE 1
OCESQL          BY VALUE 2
OCESQL          BY VALUE 0
OCESQL          BY REFERENCE SQL-AGE-MAX
OCESQL     END-CALL
OCESQL     CALL "OCESQLExecSelectIntoOne" USING
OCESQL          BY REFERENCE SQLCA
OCESQL          BY REFERENCE SQ0003
OCESQL          BY VALUE 0
OCESQL          BY VALUE 1
OCESQL     END-CALL
OCESQL     CALL "OCESQLEndSQL"
OCESQL     END-CALL.
           IF  SQLCODE NOT = ZERO 
               MOVE 'AGE MAX' TO WS-SQL-LIB
               PERFORM 9050-ERROR-RTN-START
                   THRU 9050-ERROR-RTN-END
           END-IF.
           DISPLAY WS-LIG-MAX SPACE SQL-AGE-MAX .
           
           INITIALIZE SQLCODE.
           DISPLAY WS-LIG-CPTAGE .
           DISPLAY WS-LIG-CPTAGE-ENT .
OCESQL*    EXEC SQL 
OCESQL*       DECLARE CRCPTAGE CURSOR FOR
OCESQL*          SELECT  AGE, COUNT(*) AS NBAGE FROM DATABANK
OCESQL*          GROUP BY AGE 
OCESQL*          ORDER BY NBAGE DESC 
OCESQL*    END-EXEC.
OCESQL     CALL "OCESQLCursorDeclare" USING
OCESQL          BY REFERENCE SQLCA
OCESQL          BY REFERENCE "exosql01_CRCPTAGE" & x"00"
OCESQL          BY REFERENCE SQ0004
OCESQL     END-CALL.
           IF  SQLCODE NOT = ZERO 
              MOVE 'DECLARATION CPTAGE' TO WS-SQL-LIB 
              PERFORM 9050-ERROR-RTN-START
                   THRU 9050-ERROR-RTN-END
           END-IF.
OCESQL*    EXEC SQL
OCESQL*       OPEN CRCPTAGE
OCESQL*    END-EXEC.
OCESQL     CALL "OCESQLCursorOpen" USING
OCESQL          BY REFERENCE SQLCA
OCESQL          BY REFERENCE "exosql01_CRCPTAGE" & x"00"
OCESQL     END-CALL.
           IF  SQLCODE NOT = ZERO 
              MOVE 'OUVERTURE CPTAGE' TO WS-SQL-LIB 
              PERFORM 9050-ERROR-RTN-START
                   THRU 9050-ERROR-RTN-END
           END-IF.

OCESQL*    EXEC SQL 
OCESQL*       FETCH CRCPTAGE 
OCESQL*       INTO  :SQL-AGE, :SQL-CPT-ID
OCESQL*    END-EXEC.
OCESQL     CALL "OCESQLStartSQL"
OCESQL     END-CALL
OCESQL     CALL "OCESQLSetResultParams" USING
OCESQL          BY VALUE 1
OCESQL          BY VALUE 2
OCESQL          BY VALUE 0
OCESQL          BY REFERENCE SQL-AGE
OCESQL     END-CALL
OCESQL     CALL "OCESQLSetResultParams" USING
OCESQL          BY VALUE 1
OCESQL          BY VALUE 5
OCESQL          BY VALUE 0
OCESQL          BY REFERENCE SQL-CPT-ID
OCESQL     END-CALL
OCESQL     CALL "OCESQLCursorFetchOne" USING
OCESQL          BY REFERENCE SQLCA
OCESQL          BY REFERENCE "exosql01_CRCPTAGE" & x"00"
OCESQL     END-CALL
OCESQL     CALL "OCESQLEndSQL"
OCESQL     END-CALL.
           IF  (SQLCODE NOT = ZERO) AND (SQLCODE NOT = FIN) THEN
              MOVE 'LECTURE 1 CPTAGE' TO WS-SQL-LIB 
              PERFORM 9050-ERROR-RTN-START
                   THRU 9050-ERROR-RTN-END
           END-IF.
            
           PERFORM UNTIL (SQLCODE = FIN)
              MOVE SQL-CPT-ID TO WS-LIG-NBAGEZ
              DISPLAY  SQL-AGE WS-LIG-AN WS-LIG-NBAGEZ 

OCESQL*       EXEC SQL 
OCESQL*          FETCH CRCPTAGE
OCESQL*          INTO  :SQL-AGE, :SQL-CPT-ID
OCESQL*       END-EXEC
OCESQL     CALL "OCESQLStartSQL"
OCESQL     END-CALL
OCESQL     CALL "OCESQLSetResultParams" USING
OCESQL          BY VALUE 1
OCESQL          BY VALUE 2
OCESQL          BY VALUE 0
OCESQL          BY REFERENCE SQL-AGE
OCESQL     END-CALL
OCESQL     CALL "OCESQLSetResultParams" USING
OCESQL          BY VALUE 1
OCESQL          BY VALUE 5
OCESQL          BY VALUE 0
OCESQL          BY REFERENCE SQL-CPT-ID
OCESQL     END-CALL
OCESQL     CALL "OCESQLCursorFetchOne" USING
OCESQL          BY REFERENCE SQLCA
OCESQL          BY REFERENCE "exosql01_CRCPTAGE" & x"00"
OCESQL     END-CALL
OCESQL     CALL "OCESQLEndSQL"
OCESQL     END-CALL
              IF  (SQLCODE NOT = ZERO) AND (SQLCODE NOT = FIN) THEN
                 MOVE 'LECTURE SUIVANTE CPTAGE' TO WS-SQL-LIB 
                 PERFORM 9050-ERROR-RTN-START
                   THRU 9050-ERROR-RTN-END
              END-IF   
           END-PERFORM.
       1010-PARTIE1-END.
OCESQL*    EXEC SQL
OCESQL*       CLOSE CRCPTAGE
OCESQL*    END-EXEC.
OCESQL     CALL "OCESQLCursorClose"  USING
OCESQL          BY REFERENCE SQLCA
OCESQL          BY REFERENCE "exosql01_CRCPTAGE" & x"00"
OCESQL     END-CALL
OCESQL    .
           IF  SQLCODE NOT = ZERO 
              MOVE 'FERMETURE CPTAGE' TO WS-SQL-LIB 
              PERFORM 9050-ERROR-RTN-START
                   THRU 9050-ERROR-RTN-END
           END-IF. 
           EXIT.   

       1020-PARTIE2-START.
           DISPLAY WS-LIG-BELGE. 
           DISPLAY WS-LIG-BELGE-ENT1.
           DISPLAY WS-LIG-BLC WS-LIG-BELGE-ENT2.
OCESQL*    EXEC SQL 
OCESQL*       DECLARE CRBELGE CURSOR FOR
OCESQL*          SELECT  d.ID, d.LAST_NAME, d.FIRST_NAME, d.EMAIL,
OCESQL*                p.PHRASE
OCESQL*          FROM DATABANK d INNER JOIN PHRASE p
OCESQL*          ON d.COUNTRY_CODE = p.COUNTRY_CODE  
OCESQL*          WHERE d.COUNTRY_CODE = 'BE'
OCESQL*          ORDER BY LAST_NAME, FIRST_NAME 
OCESQL*          ORDER BY LAST_NAME, FIRST_NAME 
OCESQL*    END-EXEC.
OCESQL     CALL "OCESQLCursorDeclare" USING
OCESQL          BY REFERENCE SQLCA
OCESQL          BY REFERENCE "exosql01_CRBELGE" & x"00"
OCESQL          BY REFERENCE SQ0005
OCESQL     END-CALL.
           IF  SQLCODE NOT = ZERO 
              MOVE 'DECLARATION BELGE' TO WS-SQL-LIB 
              PERFORM 9050-ERROR-RTN-START
                   THRU 9050-ERROR-RTN-END
           END-IF.
OCESQL*    EXEC SQL
OCESQL*       OPEN CRBELGE
OCESQL*    END-EXEC.
OCESQL     CALL "OCESQLCursorOpen" USING
OCESQL          BY REFERENCE SQLCA
OCESQL          BY REFERENCE "exosql01_CRBELGE" & x"00"
OCESQL     END-CALL.
           IF  SQLCODE NOT = ZERO 
              MOVE 'OUVERTURE BELGE' TO WS-SQL-LIB 
              PERFORM 9050-ERROR-RTN-START
                   THRU 9050-ERROR-RTN-END
           END-IF.

OCESQL*    EXEC SQL 
OCESQL*       FETCH CRBELGE 
OCESQL*       INTO :SQL-BE-ID, :SQL-BE-LASTNAME, :SQL-BE-FIRSTNAME,
OCESQL*            :SQL-BE-EMAIL, :SQL-BE-PHRASE
OCESQL*    END-EXEC.
OCESQL     CALL "OCESQLStartSQL"
OCESQL     END-CALL
OCESQL     CALL "OCESQLSetResultParams" USING
OCESQL          BY VALUE 16
OCESQL          BY VALUE 40
OCESQL          BY VALUE 0
OCESQL          BY REFERENCE SQL-BE-ID
OCESQL     END-CALL
OCESQL     CALL "OCESQLSetResultParams" USING
OCESQL          BY VALUE 16
OCESQL          BY VALUE 50
OCESQL          BY VALUE 0
OCESQL          BY REFERENCE SQL-BE-LASTNAME
OCESQL     END-CALL
OCESQL     CALL "OCESQLSetResultParams" USING
OCESQL          BY VALUE 16
OCESQL          BY VALUE 50
OCESQL          BY VALUE 0
OCESQL          BY REFERENCE SQL-BE-FIRSTNAME
OCESQL     END-CALL
OCESQL     CALL "OCESQLSetResultParams" USING
OCESQL          BY VALUE 16
OCESQL          BY VALUE 50
OCESQL          BY VALUE 0
OCESQL          BY REFERENCE SQL-BE-EMAIL
OCESQL     END-CALL
OCESQL     CALL "OCESQLSetResultParams" USING
OCESQL          BY VALUE 16
OCESQL          BY VALUE 50
OCESQL          BY VALUE 0
OCESQL          BY REFERENCE SQL-BE-PHRASE
OCESQL     END-CALL
OCESQL     CALL "OCESQLCursorFetchOne" USING
OCESQL          BY REFERENCE SQLCA
OCESQL          BY REFERENCE "exosql01_CRBELGE" & x"00"
OCESQL     END-CALL
OCESQL     CALL "OCESQLEndSQL"
OCESQL     END-CALL.
           IF  (SQLCODE NOT = ZERO) AND (SQLCODE NOT = FIN) THEN
              MOVE 'LECTURE 1 BELGE' TO WS-SQL-LIB 
              PERFORM 9050-ERROR-RTN-START
                   THRU 9050-ERROR-RTN-END
           END-IF.
           PERFORM UNTIL (SQLCODE = FIN)

              DISPLAY  SQL-BE-ID SPACE SQL-BE-LASTNAME SPACE 
                       SQL-BE-FIRSTNAME  
              DISPLAY  WS-LIG-BLC SQL-BE-EMAIL SPACE 
                       SQL-BE-PHRASE

OCESQL*       EXEC SQL 
OCESQL*          FETCH CRBELGE
OCESQL*          INTO  :SQL-BE-ID, :SQL-BE-LASTNAME, :SQL-BE-FIRSTNAME,
OCESQL*                :SQL-BE-EMAIL, :SQL-BE-PHRASE
OCESQL*       END-EXEC
OCESQL     CALL "OCESQLStartSQL"
OCESQL     END-CALL
OCESQL     CALL "OCESQLSetResultParams" USING
OCESQL          BY VALUE 16
OCESQL          BY VALUE 40
OCESQL          BY VALUE 0
OCESQL          BY REFERENCE SQL-BE-ID
OCESQL     END-CALL
OCESQL     CALL "OCESQLSetResultParams" USING
OCESQL          BY VALUE 16
OCESQL          BY VALUE 50
OCESQL          BY VALUE 0
OCESQL          BY REFERENCE SQL-BE-LASTNAME
OCESQL     END-CALL
OCESQL     CALL "OCESQLSetResultParams" USING
OCESQL          BY VALUE 16
OCESQL          BY VALUE 50
OCESQL          BY VALUE 0
OCESQL          BY REFERENCE SQL-BE-FIRSTNAME
OCESQL     END-CALL
OCESQL     CALL "OCESQLSetResultParams" USING
OCESQL          BY VALUE 16
OCESQL          BY VALUE 50
OCESQL          BY VALUE 0
OCESQL          BY REFERENCE SQL-BE-EMAIL
OCESQL     END-CALL
OCESQL     CALL "OCESQLSetResultParams" USING
OCESQL          BY VALUE 16
OCESQL          BY VALUE 50
OCESQL          BY VALUE 0
OCESQL          BY REFERENCE SQL-BE-PHRASE
OCESQL     END-CALL
OCESQL     CALL "OCESQLCursorFetchOne" USING
OCESQL          BY REFERENCE SQLCA
OCESQL          BY REFERENCE "exosql01_CRBELGE" & x"00"
OCESQL     END-CALL
OCESQL     CALL "OCESQLEndSQL"
OCESQL     END-CALL
              IF  (SQLCODE NOT = ZERO) AND (SQLCODE NOT = FIN) THEN
                 MOVE 'LECTURE SUIVANTE BELGE' TO WS-SQL-LIB 
                 PERFORM 9050-ERROR-RTN-START
                   THRU 9050-ERROR-RTN-END
              END-IF   
           END-PERFORM.
       1020-PARTIE2-END.
OCESQL*    EXEC SQL
OCESQL*       CLOSE CRBELGE
OCESQL*    END-EXEC.
OCESQL     CALL "OCESQLCursorClose"  USING
OCESQL          BY REFERENCE SQLCA
OCESQL          BY REFERENCE "exosql01_CRBELGE" & x"00"
OCESQL     END-CALL
OCESQL    .
           IF  SQLCODE NOT = ZERO 
              MOVE 'FERMETURE BELGE' TO WS-SQL-LIB 
              PERFORM 9050-ERROR-RTN-START
                   THRU 9050-ERROR-RTN-END
           END-IF. 
           EXIT.

       1030-PARTIE3-START.
OCESQL*    EXEC SQL 
OCESQL*       SELECT COUNT(*) INTO :SQL-NB-LIG FROM DATABANK
OCESQL*       WHERE COUNTRY_CODE = 'BE'
OCESQL*       AND AGE BETWEEN 36 AND 39
OCESQL*    END-EXEC.
OCESQL     CALL "OCESQLStartSQL"
OCESQL     END-CALL
OCESQL     CALL "OCESQLSetResultParams" USING
OCESQL          BY VALUE 1
OCESQL          BY VALUE 3
OCESQL          BY VALUE 0
OCESQL          BY REFERENCE SQL-NB-LIG
OCESQL     END-CALL
OCESQL     CALL "OCESQLExecSelectIntoOne" USING
OCESQL          BY REFERENCE SQLCA
OCESQL          BY REFERENCE SQ0006
OCESQL          BY VALUE 0
OCESQL          BY VALUE 1
OCESQL     END-CALL
OCESQL     CALL "OCESQLEndSQL"
OCESQL     END-CALL.
           IF  SQLCODE NOT = ZERO 
              MOVE 'COUNT BELGE' TO WS-SQL-LIB 
              PERFORM 9050-ERROR-RTN-START
                   THRU 9050-ERROR-RTN-END
           END-IF.

OCESQL*    EXEC SQL 
OCESQL*       UPDATE DATABANK SET COUNTRY_CODE = 'FR'
OCESQL*       WHERE COUNTRY_CODE = 'BE'
OCESQL*       AND AGE BETWEEN 36 AND 39
OCESQL*    END-EXEC.
OCESQL     CALL "OCESQLExec" USING
OCESQL          BY REFERENCE SQLCA
OCESQL          BY REFERENCE SQ0007
OCESQL     END-CALL.
           IF  SQLCODE NOT = ZERO 
              MOVE 'UPDATE BELGE' TO WS-SQL-LIB 
              PERFORM 9050-ERROR-RTN-START
                   THRU 9050-ERROR-RTN-END
           END-IF. 
OCESQL*    EXEC SQL COMMIT END-EXEC.
OCESQL     CALL "OCESQLStartSQL"
OCESQL     END-CALL
OCESQL     CALL "OCESQLExec" USING
OCESQL          BY REFERENCE SQLCA
OCESQL          BY REFERENCE "COMMIT" & x"00"
OCESQL     END-CALL
OCESQL     CALL "OCESQLEndSQL"
OCESQL     END-CALL.
           MOVE SQL-NB-LIG TO WS-LIG-NBLIGZ.
           DISPLAY WS-LIG-BEFR.
           DISPLAY WS-LIG-NBLIG SPACE WS-LIG-NBLIGZ.

OCESQL*    EXEC SQL 
OCESQL*       SELECT COUNT(*) INTO :SQL-NB-LIG FROM DATABANK
OCESQL*       WHERE COUNTRY_CODE||COUNTRY != 'BEBelgium'
OCESQL*       AND COUNTRY_CODE||COUNTRY != 'FRFrance'
OCESQL*       AND COUNTRY_CODE||COUNTRY != 'CHSwitzerland'
OCESQL*       AND COUNTRY_CODE||COUNTRY != 'LULuxembourg'
OCESQL*    END-EXEC.
OCESQL     CALL "OCESQLStartSQL"
OCESQL     END-CALL
OCESQL     CALL "OCESQLSetResultParams" USING
OCESQL          BY VALUE 1
OCESQL          BY VALUE 3
OCESQL          BY VALUE 0
OCESQL          BY REFERENCE SQL-NB-LIG
OCESQL     END-CALL
OCESQL     CALL "OCESQLExecSelectIntoOne" USING
OCESQL          BY REFERENCE SQLCA
OCESQL          BY REFERENCE SQ0008
OCESQL          BY VALUE 0
OCESQL          BY VALUE 1
OCESQL     END-CALL
OCESQL     CALL "OCESQLEndSQL"
OCESQL     END-CALL.
           IF  SQLCODE NOT = ZERO 
              MOVE 'COUNT CORR' TO WS-SQL-LIB 
              PERFORM 9050-ERROR-RTN-START
                   THRU 9050-ERROR-RTN-END
           END-IF.
OCESQL*    EXEC SQL
OCESQL*       UPDATE DATABANK   SET COUNTRY_CODE = 'BE'              
OCESQL*       WHERE COUNTRY_CODE||COUNTRY != 'BEBelgium'
OCESQL*       AND COUNTRY_CODE||COUNTRY != 'FRFrance'
OCESQL*       AND COUNTRY_CODE||COUNTRY != 'CHSwitzerland'
OCESQL*       AND COUNTRY_CODE||COUNTRY != 'LULuxembourg'
OCESQL*    END-EXEC.
OCESQL     CALL "OCESQLExec" USING
OCESQL          BY REFERENCE SQLCA
OCESQL          BY REFERENCE SQ0009
OCESQL     END-CALL.
           IF  SQLCODE NOT = ZERO 
              MOVE 'UPDATE BELGE' TO WS-SQL-LIB 
              PERFORM 9050-ERROR-RTN-START
                   THRU 9050-ERROR-RTN-END
           END-IF. 
OCESQL*    EXEC SQL COMMIT END-EXEC.
OCESQL     CALL "OCESQLStartSQL"
OCESQL     END-CALL
OCESQL     CALL "OCESQLExec" USING
OCESQL          BY REFERENCE SQLCA
OCESQL          BY REFERENCE "COMMIT" & x"00"
OCESQL     END-CALL
OCESQL     CALL "OCESQLEndSQL"
OCESQL     END-CALL.
           MOVE SQL-NB-LIG TO WS-LIG-NBLIGZ.
           DISPLAY WS-LIG-CORR.
           DISPLAY WS-LIG-NBLIG SPACE WS-LIG-NBLIGZ.

OCESQL*    EXEC SQL 
OCESQL*       SELECT COUNT(*) INTO :SQL-NB-LIG FROM DATABANK
OCESQL*    END-EXEC.
OCESQL     CALL "OCESQLStartSQL"
OCESQL     END-CALL
OCESQL     CALL "OCESQLSetResultParams" USING
OCESQL          BY VALUE 1
OCESQL          BY VALUE 3
OCESQL          BY VALUE 0
OCESQL          BY REFERENCE SQL-NB-LIG
OCESQL     END-CALL
OCESQL     CALL "OCESQLExecSelectIntoOne" USING
OCESQL          BY REFERENCE SQLCA
OCESQL          BY REFERENCE SQ0010
OCESQL          BY VALUE 0
OCESQL          BY VALUE 1
OCESQL     END-CALL
OCESQL     CALL "OCESQLEndSQL"
OCESQL     END-CALL.
           IF  SQLCODE NOT = ZERO 
              MOVE 'COUNT CORR' TO WS-SQL-LIB 
              PERFORM 9050-ERROR-RTN-START
                   THRU 9050-ERROR-RTN-END
           END-IF.
OCESQL*    EXEC SQL 
OCESQL*       UPDATE DATABANK 
OCESQL*       SET SPOKEN = UPPER(SPOKEN)
OCESQL*    END-EXEC.
OCESQL     CALL "OCESQLExec" USING
OCESQL          BY REFERENCE SQLCA
OCESQL          BY REFERENCE SQ0011
OCESQL     END-CALL.
           IF  SQLCODE NOT = ZERO 
              MOVE 'UPDATE SPOKEN' TO WS-SQL-LIB 
              PERFORM 9050-ERROR-RTN-START
                   THRU 9050-ERROR-RTN-END
           END-IF. 
OCESQL*    EXEC SQL COMMIT END-EXEC.
OCESQL     CALL "OCESQLStartSQL"
OCESQL     END-CALL
OCESQL     CALL "OCESQLExec" USING
OCESQL          BY REFERENCE SQLCA
OCESQL          BY REFERENCE "COMMIT" & x"00"
OCESQL     END-CALL
OCESQL     CALL "OCESQLEndSQL"
OCESQL     END-CALL.
           MOVE SQL-NB-LIG TO WS-LIG-NBLIGZ.
           DISPLAY WS-LIG-UCASE SPACE 'CHAMP SPOKEN'.
           DISPLAY WS-LIG-NBLIG SPACE WS-LIG-NBLIGZ.

OCESQL*    EXEC SQL 
OCESQL*       UPDATE DATABANK 
OCESQL*       SET COUNTRY = UPPER(COUNTRY)
OCESQL*    END-EXEC.
OCESQL     CALL "OCESQLExec" USING
OCESQL          BY REFERENCE SQLCA
OCESQL          BY REFERENCE SQ0012
OCESQL     END-CALL.
           IF  SQLCODE NOT = ZERO 
              MOVE 'UPDATE COUTRY' TO WS-SQL-LIB 
              PERFORM 9050-ERROR-RTN-START
                   THRU 9050-ERROR-RTN-END
           END-IF. 
OCESQL*    EXEC SQL COMMIT END-EXEC.
OCESQL     CALL "OCESQLStartSQL"
OCESQL     END-CALL
OCESQL     CALL "OCESQLExec" USING
OCESQL          BY REFERENCE SQLCA
OCESQL          BY REFERENCE "COMMIT" & x"00"
OCESQL     END-CALL
OCESQL     CALL "OCESQLEndSQL"
OCESQL     END-CALL.
           DISPLAY WS-LIG-UCASE SPACE 'CHAMP COUNTRY'.
           DISPLAY WS-LIG-NBLIG SPACE WS-LIG-NBLIGZ.
       1030-PARTIE3-END.
           EXIT.
       
       1040-PARTIE4-START.
OCESQL*    EXEC SQL 
OCESQL*       DECLARE  CRGENDER CURSOR FOR
OCESQL*          SELECT d1.COUNTRY, d1.GENDER, d.NBPEOPLE, 
OCESQL*                 COUNT(*) AS NBBYGENDER
OCESQL*        FROM DATABANK d1
OCESQL*          JOIN (
OCESQL*                SELECT COUNTRY, COUNT(*) as NBPEOPLE
OCESQL*                FROM DATABANK 
OCESQL*                WHERE GENDER IS NOT NULL
OCESQL*                GROUP BY COUNTRY
OCESQL*              ) AS d
OCESQL*         ON d.COUNTRY = d1.COUNTRY     
OCESQL*       WHERE d1.GENDER IS NOT NULL
OCESQL*       GROUP BY d1.COUNTRY, d1.GENDER,d.NBPEOPLE
OCESQL*         ORDER BY d1.COUNTRY,d1.GENDER
OCESQL*    END-EXEC.
OCESQL     CALL "OCESQLCursorDeclare" USING
OCESQL          BY REFERENCE SQLCA
OCESQL          BY REFERENCE "exosql01_CRGENDER" & x"00"
OCESQL          BY REFERENCE SQ0013
OCESQL     END-CALL.
           IF  SQLCODE NOT = ZERO 
              MOVE 'DECLARATION GENDER' TO WS-SQL-LIB 
              PERFORM 9050-ERROR-RTN-START
                   THRU 9050-ERROR-RTN-END
           END-IF.

OCESQL*    EXEC SQL
OCESQL*       SELECT MIN(AGE), MAX(AGE), 
OCESQL*       PERCENTILE_CONT(0.5) WITHIN GROUP(ORDER BY AGE) AS MEDIAN
OCESQL*       INTO :SQL-AGE-MIN, :SQL-AGE-MAX, :SQL-AGE-MEDIAN
OCESQL*       FROM DATABANK
OCESQL*    END-EXEC.
OCESQL     CALL "OCESQLStartSQL"
OCESQL     END-CALL
OCESQL     CALL "OCESQLSetResultParams" USING
OCESQL          BY VALUE 1
OCESQL          BY VALUE 2
OCESQL          BY VALUE 0
OCESQL          BY REFERENCE SQL-AGE-MIN
OCESQL     END-CALL
OCESQL     CALL "OCESQLSetResultParams" USING
OCESQL          BY VALUE 1
OCESQL          BY VALUE 2
OCESQL          BY VALUE 0
OCESQL          BY REFERENCE SQL-AGE-MAX
OCESQL     END-CALL
OCESQL     CALL "OCESQLSetResultParams" USING
OCESQL          BY VALUE 1
OCESQL          BY VALUE 2
OCESQL          BY VALUE 0
OCESQL          BY REFERENCE SQL-AGE-MEDIAN
OCESQL     END-CALL
OCESQL     CALL "OCESQLExecSelectIntoOne" USING
OCESQL          BY REFERENCE SQLCA
OCESQL          BY REFERENCE SQ0014
OCESQL          BY VALUE 0
OCESQL          BY VALUE 3
OCESQL     END-CALL
OCESQL     CALL "OCESQLEndSQL"
OCESQL     END-CALL.
           IF  SQLCODE NOT = ZERO 
              MOVE 'PARTIE4-MINMAX' TO WS-SQL-LIB 
              PERFORM 9050-ERROR-RTN-START
                   THRU 9050-ERROR-RTN-END
           END-IF.   

           OPEN OUTPUT F-OUTPUT.
           
           INITIALIZE REC-F-OUTPUT.
           STRING 
                 WS-LIG-BLC WS-LIG-BLC WS-LIG-BLC WS-LIG-BLC
                 WS-LIG-TITRE
           DELIMITED BY SIZE        
           INTO REC-F-OUTPUT.
           WRITE REC-F-OUTPUT.
           INITIALIZE REC-F-OUTPUT.
           WRITE REC-F-OUTPUT.

      * Ecriture du calcul des min max et médian des ages     
           MOVE WS-LIG-AGE-ENT TO REC-F-OUTPUT.
           WRITE REC-F-OUTPUT.
           INITIALIZE REC-F-OUTPUT.
           STRING 
                 SQL-AGE-MIN WS-LIG-AN SPACE SQL-AGE-MAX WS-LIG-AN 
                 SPACE SQL-AGE-MEDIAN WS-LIG-AN
           DELIMITED BY SIZE        
           INTO REC-F-OUTPUT.
           WRITE REC-F-OUTPUT.
           INITIALIZE REC-F-OUTPUT.
           WRITE REC-F-OUTPUT.

      * Ecriture du résultat de crgender
           MOVE WS-LIG-GENDER-ENT TO REC-F-OUTPUT.
           WRITE REC-F-OUTPUT.

OCESQL*    EXEC SQL
OCESQL*       OPEN CRGENDER
OCESQL*    END-EXEC.
OCESQL     CALL "OCESQLCursorOpen" USING
OCESQL          BY REFERENCE SQLCA
OCESQL          BY REFERENCE "exosql01_CRGENDER" & x"00"
OCESQL     END-CALL.
           IF  SQLCODE NOT = ZERO 
              MOVE 'OUVERTURE GENDER' TO WS-SQL-LIB 
              PERFORM 9050-ERROR-RTN-START
                   THRU 9050-ERROR-RTN-END
           END-IF.

           PERFORM UNTIL (SQLCODE = FIN)
OCESQL*       EXEC SQL 
OCESQL*          FETCH CRGENDER
OCESQL*          INTO :SQL-COUNTRY, :SQL-GENDER, :SQL-NBPEOPLE,
OCESQL*          :SQL-NBBYGENDER
OCESQL*       END-EXEC
OCESQL     CALL "OCESQLStartSQL"
OCESQL     END-CALL
OCESQL     CALL "OCESQLSetResultParams" USING
OCESQL          BY VALUE 16
OCESQL          BY VALUE 50
OCESQL          BY VALUE 0
OCESQL          BY REFERENCE SQL-COUNTRY
OCESQL     END-CALL
OCESQL     CALL "OCESQLSetResultParams" USING
OCESQL          BY VALUE 16
OCESQL          BY VALUE 50
OCESQL          BY VALUE 0
OCESQL          BY REFERENCE SQL-GENDER
OCESQL     END-CALL
OCESQL     CALL "OCESQLSetResultParams" USING
OCESQL          BY VALUE 1
OCESQL          BY VALUE 4
OCESQL          BY VALUE 0
OCESQL          BY REFERENCE SQL-NBPEOPLE
OCESQL     END-CALL
OCESQL     CALL "OCESQLSetResultParams" USING
OCESQL          BY VALUE 1
OCESQL          BY VALUE 4
OCESQL          BY VALUE 0
OCESQL          BY REFERENCE SQL-NBBYGENDER
OCESQL     END-CALL
OCESQL     CALL "OCESQLCursorFetchOne" USING
OCESQL          BY REFERENCE SQLCA
OCESQL          BY REFERENCE "exosql01_CRGENDER" & x"00"
OCESQL     END-CALL
OCESQL     CALL "OCESQLEndSQL"
OCESQL     END-CALL
              IF  (SQLCODE NOT = ZERO) AND (SQLCODE NOT = FIN) THEN
                 MOVE 'LECTURE GENDER' TO WS-SQL-LIB 
                 PERFORM 9050-ERROR-RTN-START
                   THRU 9050-ERROR-RTN-END
              END-IF  
              INITIALIZE REC-F-OUTPUT
              MOVE SQL-COUNTRY  TO WS-LIGD-COUNTRY
              MOVE SQL-GENDER   TO WS-LIGD-GENDER
              COMPUTE WS-POURCENT ROUNDED = 
                     (SQL-NBBYGENDER / SQL-NBPEOPLE) *100
              MOVE WS-POURCENT TO WS-LIGD-POURCENT
              MOVE WS-LIG-GENDER-DET TO REC-F-OUTPUT 
              WRITE REC-F-OUTPUT    
           END-PERFORM.
           INITIALIZE REC-F-OUTPUT.
           WRITE REC-F-OUTPUT .
           STRING 
                 WS-LIG-BLC WS-LIG-BLC WS-LIG-BLC WS-LIG-BLC
                 WS-LIG-FIN              
           DELIMITED BY SIZE
           INTO REC-F-OUTPUT .
           WRITE REC-F-OUTPUT .
       1040-PARTIE4-END.
OCESQL*    EXEC SQL
OCESQL*       CLOSE CRGENDER
OCESQL*    END-EXEC.
OCESQL     CALL "OCESQLCursorClose"  USING
OCESQL          BY REFERENCE SQLCA
OCESQL          BY REFERENCE "exosql01_CRGENDER" & x"00"
OCESQL     END-CALL
OCESQL    .
           IF  SQLCODE NOT = ZERO 
              MOVE 'FERMETURE GENDER' TO WS-SQL-LIB 
              PERFORM 9050-ERROR-RTN-START
                   THRU 9050-ERROR-RTN-END
           END-IF. 
           CLOSE F-OUTPUT.
           EXIT.
       


       9050-ERROR-RTN-START.
           DISPLAY "*** SQL ERROR ***".
           DISPLAY WS-SQL-LIB SPACE "SQLCODE: " SQLCODE SPACE.
           EVALUATE SQLCODE
              WHEN  +100
                 DISPLAY "Record not found"
              WHEN  -01
                 DISPLAY "Connection failed"
              WHEN  -20
                 DISPLAY "Internal error"
              WHEN  -30
                 DISPLAY "PostgreSQL error"
                 DISPLAY "ERRCODE:" SPACE SQLSTATE
                 DISPLAY SQLERRMC
OCESQL*          EXEC SQL
OCESQL*              ROLLBACK
OCESQL*          END-EXEC
OCESQL     CALL "OCESQLStartSQL"
OCESQL     END-CALL
OCESQL     CALL "OCESQLExec" USING
OCESQL          BY REFERENCE SQLCA
OCESQL          BY REFERENCE "ROLLBACK" & x"00"
OCESQL     END-CALL
OCESQL     CALL "OCESQLEndSQL"
OCESQL     END-CALL
              WHEN  OTHER
                 DISPLAY "Undefined error"
                 DISPLAY "ERRCODE:" SPACE SQLSTATE
                 DISPLAY SQLERRMC
           END-EVALUATE.
       9050-ERROR-RTN-END.
           STOP RUN.      
       
       
       
